#Daniel ence
#08/20/2020

include: "rules/common.smk"
include: "rules/trim.smk"
include: "rules/fastqc.smk"
include: "rules/align.smk"
include: "rules/merge_bams.smk"
include: "rules/RG_replaced.smk"
include: "rules/samtools_sort.smk"
include: "rules/samtools_rmdup.smk"
include: "rules/samtools_index.smk"
include: "rules/gatk_indel.smk"
include: "rules/freebayes.smk"
include: "rules/vcf_util.smk"
include: "rules/vcf_012_convert.smk"
include: "rules/gall_vs_nogall_rrBLUP_GWAS.smk"
#include: "rules/mosdepth.smk"

def all_input(wildcards):
    """
    Function defining all requested inputs for the rule all (below).
    """

    wanted_input = []
    wanted_input.extend(
        expand(
            pd.read_csv(config["units"], sep="\t", dtype=str)["fq1"]
        )
    )

    wanted_input.extend(
        expand(
            pd.read_csv(config["units"], sep="\t", dtype=str)["fq2"]
        )

    )

    wanted_input.extend(
        expand(
            [
                "results/realigned/{sample}.realigned.bam.bai"
            ],
                sample=units["sample"]
        )
    )

    #wanted_input.extend(["results/calls/freebayes/Fr1_megs.freebayes.vcf"])

    #wanted_input.extend(["results/calls/postprocessed/Fr1_megs.freebayes.postprocess.vcf"])
    #wanted_input.extend(["results/calls/postprocessed/Fr1_diploid.freebayes.postprocess.vcf"])

    wanted_input.extend(["results/GWAS/rrBLUP/rrBLUP.manhattanplot.pdf"])
    wanted_input.extend(["mosdepth/mosdepth.bwa_mem.report.txt"])

    return wanted_input


rule all:
    input: all_input
