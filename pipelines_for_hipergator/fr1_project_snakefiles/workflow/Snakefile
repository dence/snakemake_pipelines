#Daniel ence
#08/20/2020

include: "rules/common.smk"
include: "rules/trim.smk"
include: "rules/fastqc.smk"
include: "rules/align.smk"
include: "rules/merge_bams.smk"
include: "rules/samtools_sort.smk"
include: "rules/samtools_rmdup.smk"
include: "rules/samtools_index.smk"
include: "rules/gatk_indel.smk"

def all_input(wildcards):
    """
    Function defining all requested inputs for the rule all (below).
    """

    wanted_input = []
    wanted_input.extend(
        expand(
            pd.read_csv(config["units"], sep="\t", dtype=str)["fq1"]
        )
    )

    wanted_input.extend(
        expand(
            pd.read_csv(config["units"], sep="\t", dtype=str)["fq2"]
        )

    )

    wanted_input.extend(
        expand(
            [
                "results/logs/fastqc_pre_out/{sample}-{unit}.log"
            ],
                sample=units["sample"],unit=units["unit"]

        )

    )

    wanted_input.extend(
        expand(
            [
                "results/trimmed/{sample}-{unit}.trimmed.R1.fastq.gz",
                "results/trimmed/{sample}-{unit}.trimmed.R2.fastq.gz"
            ],
                sample=units["sample"],unit=units["unit"]
        )

    )

    wanted_input.extend(
        expand(
            [
                "results/mapped/{sample}-{unit}.bam"
            ],
                sample=units["sample"],unit=units["unit"]
        )
    )

    wanted_input.extend(
        expand(
            [
                "results/realigned/{sample}.sorted.rmdup.realigned.bam.bai"
            ],
                sample=units["sample"],unit=units["unit"]
        )

    )

    return wanted_input


rule all:
    input: all_input
